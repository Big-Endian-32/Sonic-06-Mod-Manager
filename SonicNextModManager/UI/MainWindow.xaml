<c:ImmersiveWindow x:Name="Root"
                   x:Class="SonicNextModManager.UI.MainWindow"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                   xmlns:local="clr-namespace:SonicNextModManager"
                   xmlns:metadata="clr-namespace:SonicNextModManager.Metadata"
                   xmlns:converters="clr-namespace:SonicNextModManager.UI.Converters"
                   xmlns:c="clr-namespace:SonicNextModManager.UI.Components"
                   xmlns:dd="urn:gong-wpf-dragdrop"
                   xmlns:hc="https://handyorg.github.io/handycontrol"
                   xmlns:viewmodel="clr-namespace:SonicNextModManager.UI.ViewModel"
                   d:DataContext="{d:DesignInstance Type=viewmodel:ManagerViewModel}"
                   mc:Ignorable="d"
                   Title="Sonic '06 Mod Manager"
                   Width="790" MinWidth="790"
                   Height="528" MinHeight="528"
                   Background="#191919"
                   SizeChanged="SizeChanged"
                   WindowStartupLocation="CenterScreen"
                   WindowState="{Binding Mode=TwoWay, Source={x:Static local:App.Settings}, Path=Manager_WindowState}">

    <Window.Resources>

        <!-- Set up converters -->
        <converters:InstallStateToBoolConverter x:Key="InstallStateToBoolConverter"/>
        <converters:InstallStateToInvertedBoolConverter x:Key="InstallStateToInvertedBoolConverter"/>
        <converters:StringToNotAvailableConverter x:Key="StringToNotAvailableConverter"/>
        <converters:ThumbnailToWidthConverter x:Key="ThumbnailToWidthConverter"/>

        <!-- Set up template for content metadata -->
        <DataTemplate x:Key="ContentListItem" DataType="{x:Type metadata:MetadataBase}">
            <StackPanel Orientation="Horizontal">
                <c:IconFontControl Margin="-3,0,6,-1" Height="17" Text="done" Visibility="{Binding State, Converter={StaticResource InstallStateToVisibilityConverter}, ConverterParameter={x:Static local:InstallState.Installed}}" Width="18"/>
                <hc:LoadingCircle Margin="-3,0,6,-1" DotDiameter="3" Height="17" Visibility="{Binding State, Converter={StaticResource InstallStateToVisibilityConverter}, ConverterParameter={x:Static local:InstallState.Installing}}" Width="18"/>
                <CheckBox Margin="-3,0,8,0" Checked="Content_CheckBox_CheckedChanged" Unchecked="Content_CheckBox_CheckedChanged" IsChecked="{Binding IsEnabled}" VerticalAlignment="Center" Visibility="{Binding State, Converter={StaticResource InstallStateToVisibilityConverter}, ConverterParameter={x:Static local:InstallState.Idle}}"/>
                <TextBlock Text="{Binding Title}" VerticalAlignment="Top"/>
            </StackPanel>
        </DataTemplate>

        <!-- Set up template for content information -->
        <DataTemplate x:Key="ContentInformation" DataType="{x:Type metadata:MetadataBase}">
            <Expander IsExpanded="{Binding IsInfoDisplay}"
                      Margin="{Binding ElementName=Root, Path=InfoDisplayMargin}"
                      Style="{StaticResource BaseStyle}"
                      Template="{StaticResource RevealExpander}">
                
                <!-- Set visibility from ancestor IsExpanded property, otherwise we don't get animations from the child TransitioningContentControls, for some reason. -->
                <StackPanel Visibility="{Binding IsExpanded, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Expander}}, Converter={StaticResource Boolean2VisibilityConverter}}">
                    <hc:TransitioningContentControl TransitionMode="Fade">
                        <hc:Divider Margin="0,8,0,16"/>
                    </hc:TransitioningContentControl>
                    
                    <hc:TransitioningContentControl Margin="39,0,0,8" TransitionMode="Top2BottomWithFade">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{Binding Thumbnail, Converter={StaticResource ThumbnailToWidthConverter}}"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <Border CornerRadius="3" Margin="0,0,15,0">
                                <Border.Background>
                                    <ImageBrush RenderOptions.BitmapScalingMode="HighQuality" ImageSource="{Binding Thumbnail}" Stretch="Uniform"/>
                                </Border.Background>
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="0.5"/>
                                </Border.Effect>
                            </Border>

                            <Border Grid.Column="1" Background="#141414" CornerRadius="3" Height="172" Margin="0,0,30,0">
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="0.5"/>
                                </Border.Effect>
                                <hc:ScrollViewer>
                                    <TextBlock Margin="5,2,5,2" Text="{Binding Description}" TextWrapping="WrapWithOverflow"/>
                                </hc:ScrollViewer>
                            </Border>
                        </Grid>
                    </hc:TransitioningContentControl>
                </StackPanel>
                
            </Expander>
        </DataTemplate>

        <!-- Context menu used for the mods list -->
        <ContextMenu x:Key="ModContextMenu">
            <MenuItem Header="{DynamicResource Common_OpenFolder}" Click="Common_OpenFolder_Click" InputGestureText="Ctrl+O"/>
            <MenuItem Header="{DynamicResource Common_Updates}" InputGestureText="Ctrl+U"/>
            <Separator/>
            <MenuItem Header="{DynamicResource Mods_Edit}" Click="Content_Create_Click" InputGestureText="Ctrl+E"/>
            <MenuItem Header="{DynamicResource Mods_Delete}" Click="Content_Delete_Click" InputGestureText="Del"/>
        </ContextMenu>

        <!-- Context menu used for the patches list -->
        <ContextMenu x:Key="PatchContextMenu">
            <MenuItem Header="{DynamicResource Common_OpenFolder}" Click="Common_OpenFolder_Click" InputGestureText="Ctrl+O"/>
            <Separator/>
            <MenuItem Header="{DynamicResource Patches_Edit}" Click="Content_Create_Click" InputGestureText="Ctrl+E"/>
            <MenuItem Header="{DynamicResource Patches_Delete}" Click="Content_Delete_Click" InputGestureText="Del"/>
        </ContextMenu>

    </Window.Resources>

    <Grid>

        <Grid.Resources>

            <!-- Set global transition mode -->
            <Style TargetType="hc:TransitioningContentControl">
                <Setter Property="TransitionMode" Value="Left2Right"/>
            </Style>

        </Grid.Resources>

        <Grid Margin="46,0,0,0">

            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="50"/>
            </Grid.RowDefinitions>

            <Border>

                <Border.Effect>
                    <DropShadowEffect Direction="180" ShadowDepth="1"/>
                </Border.Effect>

                <hc:TabControl Name="MainTabControl"
                                   Background="#191919"
                                   Grid.Row="0"
                                   ShowContextMenu="False"
                                   Style="{StaticResource TabControlInLine}"
                                   Margin="-1,-3,-1.5,0">

                    <hc:TabControl.ItemContainerStyle>
                        <Style TargetType="{x:Type hc:TabItem}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </Style>
                    </hc:TabControl.ItemContainerStyle>

                    <hc:TabItem Name="ModsTab">
                        <ListView Name="ModsList" Margin="0,0,0,-7"
                                  Background="#191919"
                                  BorderBrush="{x:Null}"
                                  d:ItemsSource="{d:SampleData ItemCount=1}"
                                  dd:DragDrop.IsDragSource="True"
                                  dd:DragDrop.IsDropTarget="True"
                                  dd:DragDrop.UseDefaultDragAdorner="True"
                                  dd:DragDrop.UseVisualSourceItemSizeForDragAdorner="True"
                                  dd:DragDrop.DropHandler="{Binding}"
                                  dd:DragDrop.SelectDroppedItems="True"
                                  ItemsSource="{Binding Database.Mods}"
                                  VirtualizingPanel.ScrollUnit="Pixel">
                            <ListView.ItemContainerStyle>
                                <Style BasedOn="{StaticResource SlimListViewItem}" TargetType="ListViewItem">
                                    <EventSetter Event="KeyDown" Handler="ModsList_KeyDown"/>
                                    <EventSetter Event="MouseDoubleClick" Handler="ModsList_MouseDoubleClick"/>
                                    <Setter Property="ContextMenu" Value="{DynamicResource ModContextMenu}"/>
                                    <Setter Property="dd:DragDrop.DragSourceIgnore" Value="{Binding State, Converter={StaticResource InstallStateToInvertedBoolConverter}}"/>
                                    <Setter Property="ToolTip">
                                        <Setter.Value>
                                            <ToolTip Content="{DynamicResource Mods_DragDrop}"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="VerticalContentAlignment" Value="Top"/>
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.View>
                                <GridView ColumnHeaderContainerStyle="{StaticResource SlimGridViewColumnHeader}">
                                    <GridViewColumn CellTemplate="{StaticResource ContentInformation}" Width="0"/>
                                    <GridViewColumn Header="{DynamicResource Metadata_Title}" CellTemplate="{StaticResource ContentListItem}" Width="250"/>
                                    <GridViewColumn Header="{DynamicResource Metadata_Version}" DisplayMemberBinding="{Binding Version}" Width="80"/>
                                    <GridViewColumn Header="{DynamicResource Metadata_Author}" DisplayMemberBinding="{Binding Author}" Width="125"/>
                                    <GridViewColumn Header="{DynamicResource Metadata_Date}" DisplayMemberBinding="{Binding Date, Converter={StaticResource StringToNotAvailableConverter}}" Width="80"/>
                                    <GridViewColumn Header="{DynamicResource Metadata_Platform}" DisplayMemberBinding="{Binding Platform}" Width="80"/>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </hc:TabItem>

                    <hc:TabItem Name="PatchesTab">
                        <ListView Name="PatchesList" Margin="0,0,0,-7"
                                  Background="#191919"
                                  BorderBrush="{x:Null}"
                                  d:ItemsSource="{d:SampleData ItemCount=1}"
                                  ItemsSource="{Binding Database.Patches}"
                                  VirtualizingPanel.ScrollUnit="Pixel">
                            <ListView.ItemContainerStyle>
                                <Style BasedOn="{StaticResource SlimListViewItem}" TargetType="ListViewItem">
                                    <EventSetter Event="KeyDown" Handler="PatchesList_KeyDown"/>
                                    <EventSetter Event="MouseDoubleClick" Handler="ModsList_MouseDoubleClick"/>
                                    <Setter Property="ContextMenu" Value="{DynamicResource PatchContextMenu}"/>
                                    <Setter Property="VerticalContentAlignment" Value="Top"/>
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.View>
                                <GridView ColumnHeaderContainerStyle="{StaticResource SlimGridViewColumnHeader}">
                                    <GridViewColumn CellTemplate="{StaticResource ContentInformation}" Width="0"/>
                                    <GridViewColumn Header="{DynamicResource Metadata_Title}" CellTemplate="{StaticResource ContentListItem}"/>
                                    <GridViewColumn Header="{DynamicResource Metadata_Author}" DisplayMemberBinding="{Binding Author}"/>
                                    <GridViewColumn Header="{DynamicResource Metadata_Platform}" DisplayMemberBinding="{Binding Platform}" Width="80"/>
                                    <GridViewColumn Header="{DynamicResource Metadata_Blurb}" DisplayMemberBinding="{Binding Blurb}"/>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </hc:TabItem>

                    <hc:TabItem Name="TweaksTab">
                        <hc:PropertyGrid Margin="0,0,0,-7" Background="#191919" ShowSortButton="False"/>
                    </hc:TabItem>

                    <hc:TabItem Name="UpdatesTab">
                        <Grid Margin="0,0,0,-7" Background="#191919"/>
                    </hc:TabItem>

                </hc:TabControl>

            </Border>

            <StackPanel Grid.Row="1" Margin="10,0,0,0" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">

                <!-- Set up installer thread buttons -->
                <StackPanel Orientation="Horizontal">
                    <hc:ProgressButton Name="Install"
                                       Click="Install_Click"
                                       Content="{DynamicResource Main_Install}"
                                       Width="200" Height="32"
                                       Style="{DynamicResource ProgressButtonPrimaryHorizontalFirst}"
                                       Progress="{Binding InstallProgress}"/>
                    
                    <hc:ProgressButton Name="Uninstall"
                                       Click="Uninstall_Click"
                                       Content="{DynamicResource Main_Uninstall}"
                                       Width="120" Height="32"
                                       Style="{DynamicResource ProgressButtonPrimaryHorizontalLast}"
                                       Progress="{Binding UninstallProgress}"/>
                </StackPanel>

                <!-- Set up emulator launcher -->
                <StackPanel Name="Emulator_Launcher" Orientation="Horizontal" Margin="8,0,8,0">
                    <Button Width="32" Height="32">
                        <c:IconFontControl Text="play_arrow"/>
                    </Button>
                </StackPanel>

            </StackPanel>

            <StackPanel Grid.Row="1" HorizontalAlignment="Right" Orientation="Horizontal" VerticalAlignment="Center">

                <!-- Search button -->
                <Button Height="32"
                        hc:IconElement.Geometry="{StaticResource SearchGeometry}"
                        hc:IconElement.Width="20"
                        Style="{StaticResource ButtonIconCircular}"
                        ToolTip="{DynamicResource Common_Search}"
                        Width="32"/>

                <!-- Refresh button -->
                <Button Click="Refresh_Click"
                        Height="32"
                        hc:IconElement.Geometry="{StaticResource RotateRightGeometry}"
                        hc:IconElement.Width="20"
                        Margin="10,0,0,0"
                        Style="{StaticResource ButtonIconCircular}"
                        ToolTip="{DynamicResource Common_Refresh}"
                        Width="32"/>

                <!-- Add button -->
                <Button Click="Add_Click"
                        Height="32"
                        hc:IconElement.Geometry="{StaticResource AddGeometry}"
                        hc:IconElement.Width="16"
                        Margin="10,0,10,0"
                        Style="{StaticResource ButtonIconCircular}"
                        ToolTip="{DynamicResource Mods_Create}"
                        Width="32"/>

            </StackPanel>

        </Grid>

        <Border Name="Sidebar"
                BorderBrush="{StaticResource BorderBrush}"
                BorderThickness="1"
                HorizontalAlignment="Left"
                Margin="-1,-1,0,-1"
                MouseLeave="Sidebar_MouseLeave"
                Width="48">

            <Border.Resources>
                <Storyboard x:Key="SidebarOpening">
                    <DoubleAnimation Storyboard.TargetName="Sidebar" Storyboard.TargetProperty="(Border.Width)" To="150" Duration="0:0:0.1"/>
                    <DoubleAnimation Storyboard.TargetName="Sidebar" Storyboard.TargetProperty="(Border.Width)" To="200" Duration="0:0:0.15"/>
                    <DoubleAnimation Storyboard.TargetName="SidebarDropShadowEffect" Storyboard.TargetProperty="(DropShadowEffect.Opacity)" To="100" Duration="0:0:0.1"/>
                </Storyboard>
                <Storyboard x:Key="SidebarClosing">
                    <DoubleAnimation Storyboard.TargetName="SidebarDropShadowEffect" Storyboard.TargetProperty="(DropShadowEffect.Opacity)" To="0" Duration="0:0:0.1"/>
                    <DoubleAnimation Storyboard.TargetName="Sidebar" Storyboard.TargetProperty="(Border.Width)" To="98" Duration="0:0:0.1"/>
                    <DoubleAnimation Storyboard.TargetName="Sidebar" Storyboard.TargetProperty="(Border.Width)" To="48" Duration="0:0:0.15"/>
                </Storyboard>
            </Border.Resources>

            <Border.Effect>
                <DropShadowEffect x:Name="SidebarDropShadowEffect" Direction="0" Opacity="0" ShadowDepth="1"/>
            </Border.Effect>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="48"/>
                    <RowDefinition/>
                    <RowDefinition Height="48"/>
                </Grid.RowDefinitions>

                <hc:SideMenu>
                    <hc:SideMenuItem Name="SidebarMenu" Header="Menu" Command="{Binding ElementName=Root, Path=Command_SidebarMenu_Click}">
                        <hc:SideMenuItem.Icon>
                            <TextBlock Text="menu" FontFamily="{StaticResource MaterialIcons}" FontSize="28"/>
                        </hc:SideMenuItem.Icon>
                    </hc:SideMenuItem>
                </hc:SideMenu>

                <hc:SideMenu Grid.Row="1">
                    <hc:SideMenuItem Header="Mods" IsSelected="True" Command="{Binding ElementName=Root, Path=Command_SetSidebarTabIndex}" CommandParameter="0">
                        <hc:SideMenuItem.Icon>
                            <TextBlock Text="widgets" FontFamily="{StaticResource MaterialIcons}" FontSize="28"/>
                        </hc:SideMenuItem.Icon>
                    </hc:SideMenuItem>
                    <hc:SideMenuItem Header="Patches" Command="{Binding ElementName=Root, Path=Command_SetSidebarTabIndex}" CommandParameter="1">
                        <hc:SideMenuItem.Icon>
                            <TextBlock Text="auto_awesome" FontFamily="{StaticResource MaterialIcons}" FontSize="28"/>
                        </hc:SideMenuItem.Icon>
                    </hc:SideMenuItem>
                    <hc:SideMenuItem Header="Tweaks" Command="{Binding ElementName=Root, Path=Command_SetSidebarTabIndex}" CommandParameter="2">
                        <hc:SideMenuItem.Icon>
                            <TextBlock Text="tune" FontFamily="{StaticResource MaterialIcons}" FontSize="28"/>
                        </hc:SideMenuItem.Icon>
                    </hc:SideMenuItem>
                    <hc:SideMenuItem Header="Updates" Command="{Binding ElementName=Root, Path=Command_SetSidebarTabIndex}" CommandParameter="3">
                        <hc:SideMenuItem.Icon>
                            <TextBlock Text="update" FontFamily="{StaticResource MaterialIcons}" FontSize="28"/>
                        </hc:SideMenuItem.Icon>
                    </hc:SideMenuItem>
                </hc:SideMenu>

                <hc:SideMenu Grid.Row="2">
                    <hc:SideMenuItem x:Name="Sidebar_Settings" Header="Settings" Command="{Binding ElementName=Root, Path=Command_OpenSettings}">
                        <hc:SideMenuItem.Icon>
                            <TextBlock Text="settings" FontFamily="{StaticResource MaterialIcons}" FontSize="28"/>
                        </hc:SideMenuItem.Icon>
                    </hc:SideMenuItem>
                </hc:SideMenu>
            </Grid>

        </Border>
    </Grid>

</c:ImmersiveWindow>
